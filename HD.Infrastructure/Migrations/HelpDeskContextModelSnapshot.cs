// <auto-generated />
using System;
using HD.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HD.Infrastructure.Migrations
{
    [DbContext(typeof(HelpDeskContext))]
    partial class HelpDeskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HD.ApplicationCore.Domain.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"));

                    b.Property<int>("AgentType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");

                    b.HasDiscriminator<int>("AgentType").HasValue(0);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.AgentClaimLog", b =>
                {
                    b.Property<int>("ComplaintFK")
                        .HasColumnType("int");

                    b.Property<int>("AgentFK")
                        .HasColumnType("int");

                    b.Property<int>("AdminFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("AffectedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Affected")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ComplaintFK", "AgentFK", "AdminFK", "AffectedDate");

                    b.HasIndex("AdminFK");

                    b.HasIndex("AgentFK");

                    b.ToTable("AgentClaimLogs");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Client", b =>
                {
                    b.Property<int>("clientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clientId"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Complaint", b =>
                {
                    b.Property<int>("ComplaintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintId"));

                    b.Property<int>("ClientFK")
                        .HasColumnType("int");

                    b.Property<int>("ComplaintState")
                        .HasColumnType("int");

                    b.Property<int>("ComplaintStatus")
                        .HasColumnType("int");

                    b.Property<int>("ComplaintType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeatureFK")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ComplaintId");

                    b.HasIndex("ClientFK");

                    b.HasIndex("FeatureFK");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Faq", b =>
                {
                    b.Property<int>("FaqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaqId"));

                    b.Property<string>("Anwser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeatureFK")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaqId");

                    b.HasIndex("FeatureFK");

                    b.ToTable("Faqs");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int>("ComplaintFK")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("ComplaintFK")
                        .IsUnique();

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Horodatage", b =>
                {
                    b.Property<double>("HorodatageId")
                        .HasColumnType("float");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimState")
                        .HasColumnType("int");

                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("HorodatageId");

                    b.ToTable("Horodatage");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.KnowledgeBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdminAdd")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureFK")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureFK");

                    b.ToTable("KnowledgeBases");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ComplaintFK")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("TypeSender")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("ComplaintFK");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Admin", b =>
                {
                    b.HasBaseType("HD.ApplicationCore.Domain.Agent");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.AgentClaimLog", b =>
                {
                    b.HasOne("HD.ApplicationCore.Domain.Agent", "Admin")
                        .WithMany("AgentClaimLogsAsAdmin")
                        .HasForeignKey("AdminFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HD.ApplicationCore.Domain.Agent", "Agent")
                        .WithMany("AgentClaimLogsAsAgent")
                        .HasForeignKey("AgentFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HD.ApplicationCore.Domain.Complaint", "Complaint")
                        .WithMany("AgentClaimLogs")
                        .HasForeignKey("ComplaintFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Agent");

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Complaint", b =>
                {
                    b.HasOne("HD.ApplicationCore.Domain.Client", "Client")
                        .WithMany("Complaints")
                        .HasForeignKey("ClientFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HD.ApplicationCore.Domain.Feature", "Feature")
                        .WithMany("Complaints")
                        .HasForeignKey("FeatureFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Faq", b =>
                {
                    b.HasOne("HD.ApplicationCore.Domain.Feature", "Feature")
                        .WithMany("Faqs")
                        .HasForeignKey("FeatureFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Feedback", b =>
                {
                    b.HasOne("HD.ApplicationCore.Domain.Complaint", "Complaint")
                        .WithOne("Feedback")
                        .HasForeignKey("HD.ApplicationCore.Domain.Feedback", "ComplaintFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.KnowledgeBase", b =>
                {
                    b.HasOne("HD.ApplicationCore.Domain.Feature", "Feature")
                        .WithMany("KnowledgeBases")
                        .HasForeignKey("FeatureFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Message", b =>
                {
                    b.HasOne("HD.ApplicationCore.Domain.Complaint", "Complaint")
                        .WithMany("Messages")
                        .HasForeignKey("ComplaintFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Agent", b =>
                {
                    b.Navigation("AgentClaimLogsAsAdmin");

                    b.Navigation("AgentClaimLogsAsAgent");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Client", b =>
                {
                    b.Navigation("Complaints");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Complaint", b =>
                {
                    b.Navigation("AgentClaimLogs");

                    b.Navigation("Feedback")
                        .IsRequired();

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("HD.ApplicationCore.Domain.Feature", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("Faqs");

                    b.Navigation("KnowledgeBases");
                });
#pragma warning restore 612, 618
        }
    }
}
